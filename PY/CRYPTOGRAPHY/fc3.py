#!/usr/bin/python3
import subprocess
import gmpy2
from gmpy2 import mpz

N =mpz(720062263747350425279564435525583738338084451473999841826653057981916355690188337790423408664187663938485175264994017897083524079135686877441155132015188279331812309091996246361896836573643119174094961348524639707885238799396839230364676670221627018353299443241192173812729276147530748597302192751375739387929)

#N6=gmpy2.mul(6,N)
#rt6N = gmpy2.isqrt(N6)
#A1=rt6N
#A2=rt6N+1
#B1=gmpy2.mul(A1,A1) - N6
#B2=gmpy2.mul(A2,A2) - N6

# x = sqrt((A**2) - 6N)
#A2 = A ** 2
#x = (gmpy2.isqrt(A2 - (6*N))) -2

#>>> B1
#mpz(-196964583030473273123266658613260688730573520313292830146731279751026365681221995415789013203406448897084635027350851945686843616144515898046438742914544125)
#>>> B2
#mpz(-65505485475620074569622727423756953336680463753223255966134738246263093212465065209974072500623587258450057452227357748138839160485320977313355767837140338)
#>>> B3
#mpz(65953612079233123984021203765746782057212592806846318214461803258500179256291864995840868202159274380184520122896136449409165295173873943419727207240263451)

#x1=gmpy2.isqrt(-B2)
#x2=gmpy2.isqrt(B3)

#>>> x1
#mpz(255940394380449594886692315505126271073816530656442568307521829511283316591342)
#>>> x2
#mpz(256814353335698750589939871114018551550561644060745480601111178547406467759063)

#p = A1-x1
#(p,r)=gmpy2.f_divmod(p,3)

#>>> p
#mpz(21909849592475533092273988531583955898982176093344929030099423584127212078126069429518044884213613626482058256336732179043313827449665449729331360356980943)
#>>> r
#mpz(1)
#>>> gmpy2.is_prime(p)
#False

#>>> (q,r)=gmpy2.f_divmod(N,p)
#>>> q
#mpz(32864774388713299638410982797375933848473264140017393545149135376190818117189360958630403025071010379594201403056648830209031486655099285772544447003230333)
#>>> gmpy2.is_prime(q)
#False
# ran with p=A1-x2 >>
# pct done =  100  - p =  21909849592475533092273988531583955898982176093344929030099423584127212078126069429518044884213613626482058256336732179043313827449665449729331360730205663

#best approximation of p >>
p=mpz(21909849592475533092273988531583955898982176093344929030099423584127212078126240347767283600328772503877597971277606971768219556799301660732017590285097745)

#so go down a bit and check upwards >>
p=mpz(21909849592475533092273988531583955898982176093344929030099423584127212078126240347767283600328772503877597971277606971768219556799301660732017590000000000)
#check further along >>
p=mpz(21909849592475533092273988531583955898982176093344929030099423584127212078126240347767283600328772503877597971277606971768219556799301660732017593726205299)
#check further along >>
p=mpz(21909849592475533092273988531583955898982176093344929030099423584127212078126240347767283600328772503877597971277606971768219556799301660732017601010382619)
# last checked >>
p=mpz(21909849592475533092273988531583955898982176093344929030099423584127212078126240347767283600328772503877597971277606971768219556799301660732017608293511017)


print("Initial p = ",p)
curtime = subprocess.run(['date'], stdout=subprocess.PIPE).stdout.decode('utf-8')
print("starting.  -  Current time = ",curtime)

cnt=0
pct=0
# Find p upward
for dist in range(1,20485770):
    cnt += 1
    if (cnt == 204857):
        curtime = subprocess.run(['date'], stdout=subprocess.PIPE).stdout.decode('utf-8')
        print("time is", curtime)
        cnt = 0
        pct += 1
        print("pct done = ",pct," - p = ",p)
    
    # find next prime
    p=gmpy2.next_prime(p)

    # find next q
    (q,r)=gmpy2.f_divmod(N,p)
    if (r != 0):
        continue

    # is q prime?
    print("division looks good, checking for prime.  q = ",q)
    if (gmpy2.is_prime(q)):
        print("q is prime")
        Ntest = gmpy2.mul(p,q)
        if (Ntest == N):
            print("N = ", N)
            print("p = ", p)
            print("q = ", q)
            print("pq= ", Ntest)
            break
